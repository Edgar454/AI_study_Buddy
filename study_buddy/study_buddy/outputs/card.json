{"flascard_dict":{"Beginner":[{"section":"Introduction","question":"What is Java?","answer":"Java is a programming language created by James Gosling and presented officially in 1995. It is used in various types of applications such as mobile applications (Android), desktop applications, web applications, and enterprise applications."},{"section":"Java Development Kit (JDK)","question":"What is the Java Development Kit (JDK)?","answer":"The Java Development Kit (JDK) is a software development environment used to develop Java applications. It includes various tools such as the Java compiler (javac), the Java interpreter (java), and the Java documentation generator (javadoc). The JDK also includes the Java Runtime Environment (JRE), which is used to run Java applications."},{"section":"Creating a Java Program","question":"How do you create a Java program?","answer":"To create a Java program, the user needs to create a Java source file with a .java extension. The source file should contain a public class with a main method. The main method is the entry point of the program. The user can then compile the source file using the javac command and run the resulting bytecode using the java command."},{"section":"Java Classes and Objects","question":"What is a class in Java?","answer":"In Java, a class is a blueprint for creating objects. An object is an instance of a class. A class can contain variables and methods. Variables are used to store data, while methods are used to perform operations on the data."},{"section":"Java Inheritance","question":"What is inheritance in Java?","answer":"Inheritance is a mechanism in Java that allows a class to inherit properties and methods from another class. The class that inherits properties and methods is called the subclass, while the class that provides the properties and methods is called the superclass. Inheritance allows for code reuse and promotes modularity."}],"Intermediate":[{"section":"Java Polymorphism","question":"What is polymorphism in Java?","answer":"Polymorphism is a mechanism in Java that allows objects of different classes to be treated as objects of a common superclass. This means that a single method call can be used to invoke different methods depending on the type of object being used. Polymorphism promotes code reuse and makes code more flexible."},{"section":"Java Encapsulation","question":"What is encapsulation in Java?","answer":"Encapsulation is a mechanism in Java that allows data and methods to be bundled together in a single unit called a class. This means that the data and methods are hidden from other classes, and can only be accessed through the class's public interface. Encapsulation promotes data hiding and makes code more secure."},{"section":"Creating a Java Program","question":"What is the main method in Java?","answer":"The main method is the entry point of a Java program. It is a public static method that takes an array of strings as an argument and returns void."},{"section":"Java Classes and Objects","question":"What is an object in Java?","answer":"An object is an instance of a class in Java. It is a runtime entity that contains data and methods. Objects are created using the new keyword."},{"section":"Java Inheritance","question":"What is a superclass in Java?","answer":"A superclass is a class that provides properties and methods to a subclass. The subclass inherits the properties and methods of the superclass."}],"Advanced":[{"section":"Java Polymorphism","question":"How does polymorphism promote code reuse in Java?","answer":"Polymorphism promotes code reuse by allowing a single method call to be used to invoke different methods depending on the type of object being used. This means that the same code can be used to perform different operations on different types of objects."},{"section":"Java Encapsulation","question":"How does encapsulation promote data hiding in Java?","answer":"Encapsulation promotes data hiding by allowing data and methods to be bundled together in a single unit called a class. This means that the data and methods are hidden from other classes, and can only be accessed through the class's public interface. This makes the data more secure and less prone to errors."},{"section":"Java Classes and Objects","question":"What is the difference between a class and an object in Java?","answer":"A class is a blueprint for creating objects, while an object is an instance of a class. A class defines the properties and methods of an object, while an object is a runtime entity that contains data and methods."},{"section":"Java Inheritance","question":"What is the difference between a subclass and a superclass in Java?","answer":"A subclass is a class that inherits properties and methods from a superclass. The subclass can add its own properties and methods, or override the properties and methods of the superclass. A superclass is a class that provides properties and methods to a subclass."},{"section":"Java Polymorphism","question":"What is method overriding in Java?","answer":"Method overriding is a mechanism in Java that allows a subclass to provide a different implementation of a method that is already provided by its superclass. This means that the subclass can change the behavior of the method without changing its signature."}]}}